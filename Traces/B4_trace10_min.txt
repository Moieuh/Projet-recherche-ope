Entrer le numero du Test que vous voulez afficher : 10

Matrice de capacité:
      s   A   B   C   D   E   t
  s   0 150 150   0   0   0   0
  A   0   0   0 120 100   0   0
  B   0   0   0   0 100 120   0
  C   0   0   0   0   0   0 150
  D   0   0   0  50   0   0  80
  E   0   0   0   0  50   0 150
  t   0   0   0   0   0   0   0

Matrice de coût:
      s   A   B   C   D   E   t
  s   0   2   3   0   0   0   0
  A   0   0   0   4   1   0   0
  B   0   0   0   0   2   5   0
  C   0   0   0   0   0   0   3
  D   0   0   0   6   0   0   3
  E   0   0   0   0   8   0   4
  t   0   0   0   0   0   0   0
Exécution de l'algorithme flot à coût min
Entrez la valeur du flot voulu : 3

===== Initialisation =====
Distances initiales : [0, inf, inf, inf, inf, inf, inf]
Parents initiaux   : [-1, -1, -1, -1, -1, -1, -1]
==========================

--- Itération 1 ---
  Distances : [0, 2, 3, 6, 3, 8, 6]
  Parents   : [-1, 0, 0, 1, 1, 2, 4]
--- Itération 2 ---
  Distances : [0, 2, 3, 6, 3, 8, 6]
  Parents   : [-1, 0, 0, 1, 1, 2, 4]

Aucune mise à jour effectuée. L'algorithme s'arrête ici.


===== Résultats finaux =====
Distances finales : [0, 2, 3, 6, 3, 8, 6]
Parents finaux   : [-1, 0, 0, 1, 1, 2, 4]
============================


Valeur de flot d’une chaîne améliorante potentiellement trouvée : 3
Arc 4->6 : capacite_residuelle mise à jour : 77
Arc 1->4 : capacite_residuelle mise à jour : 97
Arc 0->1 : capacite_residuelle mise à jour : 147

===== Résultat cout min =====
Flot total : 3
Coût total minimal : 18
Chemin final utilisé avec flots et coûts :
Arc 0->1 : 3 unités de flot, coût par unité : 2
Arc 1->4 : 3 unités de flot, coût par unité : 1
Arc 4->6 : 3 unités de flot, coût par unité : 3
===========================


Voulez essayer un autre fichier?
 oui:0
 non:1